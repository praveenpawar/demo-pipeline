Demo-Pipeline:


(base) C:\Users\pvppa>conda --help
usage: conda-script.py [-h] [-V] command ...

conda is a tool for managing and deploying applications, environments and packages.

Options:

positional arguments:
  command
    clean        Remove unused packages and caches.
    compare      Compare packages between conda environments.
    config       Modify configuration values in .condarc. This is modeled after the git config command. Writes to the
                 user .condarc file (C:\Users\pvppa\.condarc) by default. Use the --show-sources flag to display all
                 identified configuration locations on your computer.
    create       Create a new conda environment from a list of specified packages.
    info         Display information about current conda install.
    init         Initialize conda for shell interaction.
    install      Installs a list of packages into a specified conda environment.
    list         List installed packages in a conda environment.
    package      Low-level conda package utility. (EXPERIMENTAL)
    remove       Remove a list of packages from a specified conda environment.
    rename       Renames an existing environment.
    run          Run an executable in a conda environment.
    search       Search for packages and display associated information.The input is a MatchSpec, a query language for
                 conda packages. See examples below.
    uninstall    Alias for conda remove.
    update       Updates conda packages to the latest compatible version.
    upgrade      Alias for conda update.
    notices      Retrieves latest channel notifications.

optional arguments:
  -h, --help     Show this help message and exit.
  -V, --version  Show the conda version number and exit.

conda commands available from other packages:
  build
  content-trust
  convert
  debug
  develop
  env
  index
  inspect
  metapackage
  pack
  render
  repo
  server
  skeleton
  token
  verify

(base) C:\Users\pvppa>

(base) C:\Users\pvppa>conda env list
# conda environments:
#
base                  *  C:\Users\pvppa\anaconda3
image_scrapper           C:\Users\pvppa\anaconda3\envs\image_scrapper


(base) C:\Users\pvppa>

base env is default vartual environment.

###################################################

conda create -p venv python=3.8

Diiference bwtween -p and -n:
-p : env will be available in directory only
-n : env will be in default anaconda path

####################################################

on VS code:

Microsoft Windows [Version 10.0.19045.2728]
(c) Microsoft Corporation. All rights reserved.

C:\Users\pvppa\Documents\demo-pipeline>conda env list
# conda environments:
#
base                     C:\Users\pvppa\anaconda3
image_scrapper           C:\Users\pvppa\anaconda3\envs\image_scrapper


C:\Users\pvppa\Documents\demo-pipeline>conda create -p venv python=3.8
Collecting package metadata (current_repodata.json): done
Solving environment: done


==> WARNING: A newer version of conda exists. <==
  current version: 22.9.0
  latest version: 23.1.0

Please update conda by running

    $ conda update -n base -c defaults conda     



## Package Plan ##

  environment location: C:\Users\pvppa\Documents\demo-pipeline\venv

  added / updated specs:
    - python=3.8


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    ca-certificates-2023.01.10 |       haa95532_0         121 KB
    certifi-2022.12.7          |   py38haa95532_0         148 KB
    libffi-3.4.2               |       hd77b12b_6         109 KB
    openssl-1.1.1t             |       h2bbff1b_0         5.5 MB
    pip-23.0.1                 |   py38haa95532_0         2.7 MB
    python-3.8.16              |       h6244533_3        18.9 MB
    setuptools-65.6.3          |   py38haa95532_0         1.1 MB
    sqlite-3.41.1              |       h2bbff1b_0         897 KB
    wheel-0.38.4               |   py38haa95532_0          83 KB
    wincertstore-0.2           |   py38haa95532_2          15 KB
    ------------------------------------------------------------
                                           Total:        29.6 MB

The following NEW packages will be INSTALLED:

  ca-certificates    pkgs/main/win-64::ca-certificates-2023.01.10-haa95532_0 None
  certifi            pkgs/main/win-64::certifi-2022.12.7-py38haa95532_0 None
  libffi             pkgs/main/win-64::libffi-3.4.2-hd77b12b_6 None
  openssl            pkgs/main/win-64::openssl-1.1.1t-h2bbff1b_0 None
  pip                pkgs/main/win-64::pip-23.0.1-py38haa95532_0 None
  python             pkgs/main/win-64::python-3.8.16-h6244533_3 None
  setuptools         pkgs/main/win-64::setuptools-65.6.3-py38haa95532_0 None
  sqlite             pkgs/main/win-64::sqlite-3.41.1-h2bbff1b_0 None
  vc                 pkgs/main/win-64::vc-14.2-h21ff451_1 None
  vs2015_runtime     pkgs/main/win-64::vs2015_runtime-14.27.29016-h5e58377_2 None
  wheel              pkgs/main/win-64::wheel-0.38.4-py38haa95532_0 None
  wincertstore       pkgs/main/win-64::wincertstore-0.2-py38haa95532_2 None


Proceed ([y]/n)? y


Downloading and Extracting Packages
ca-certificates-2023 | 121 KB    | ########################################################################################################################### | 100%  
certifi-2022.12.7    | 148 KB    | ########################################################################################################################### | 100%  
wheel-0.38.4         | 83 KB     | ########################################################################################################################### | 100%  
python-3.8.16        | 18.9 MB   | ########################################################################################################################### | 100%  
wincertstore-0.2     | 15 KB     | ########################################################################################################################### | 100%  
sqlite-3.41.1        | 897 KB    | ########################################################################################################################### | 100%  
setuptools-65.6.3    | 1.1 MB    | ########################################################################################################################### | 100%  
pip-23.0.1           | 2.7 MB    | ########################################################################################################################### | 100%  
libffi-3.4.2         | 109 KB    | ########################################################################################################################### | 100%  
openssl-1.1.1t       | 5.5 MB    | ########################################################################################################################### | 100%  
Preparing transaction: done
Verifying transaction: done
Executing transaction: done
#
# To activate this environment, use
#
#     $ conda activate C:\Users\pvppa\Documents\demo-pipeline\venv
#
# To deactivate an active environment, use
#
#     $ conda deactivate

Retrieving notices: ...working... done

C:\Users\pvppa\Documents\demo-pipeline>
#########################################################################


C:\Users\pvppa\Documents\demo-pipeline>conda activate venv

EnvironmentNameNotFound: Could not find conda environment: venv
You can list all discoverable environments with `conda info --envs`.

C:\Users\pvppa\Documents\demo-pipeline>conda activate C:\Users\pvppa\Documents\demo-pipeline\venv

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>
(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>python --version
Python 3.8.16


############################################################################

Github:

created in repo on github:

https://github.com/praveenpawar/demo-pipeline.git

echo "# demo-pipeline" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/praveenpawar/demo-pipeline.git
git push -u origin main


#######################################################################

on vs code:


(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>git remote -v
fatal: not a git repository (or any of the parent directories): .git

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>


(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>git init
Initialized empty Git repository in C:/Users/pvppa/Documents/demo-pipeline/.git/


### create the teo files .gitignore and README.md
and type venv in .gitignore file, it will ignore into adding to github.



(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>git add .

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>git commit -m "first commit"
[master (root-commit) 4740634] first commit
 2 files changed, 1 insertion(+)
 create mode 100644 .gitignore
 create mode 100644 README.md

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>git branch -M main

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>git remote add origin https://github.com/praveenpawar/demo-pipeline.git

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>git push -u origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 256 bytes | 64.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/praveenpawar/demo-pipeline.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>


#########################################################################################

Process (Pipeline) for ML Project: Core-ML Pipeline

1. Data injection (From Data warehouse ex. MongoDB, MySql or any Dataset ex. .csv, .tsv. .json)
2. EDA
3. Pre-Processing(FE)
4. Model (ML algo) -> Supervised/unsupervised
5. Evaluation => Confusion matrix(P, R, A, C), roc/auc

##########################################################################################


Data Injection => Data Validation (EDA) => Data Pre-processing => Data Model => model evaluation

##########################################################################################

configuraion of component
artifacts (output)
Logging and exception handling

for infrastucture:
Git and Github
Docker
Package of the component
Cloud

##########################################################################################

Developemnt =>  QA => Testing => Deployment

##########################################################################################

CI (Continoues Integration) => Local to Github
CD (Continoues Deployment) => Github to cloud (AWS, Azure, GCP)

##########################################################################################

module Packaging:

Package of all the process of ML pipeline and upload/publish this package on conda or PyPI.

Docker:

another way to package as a single image. (container/package/docker-compose/docker-hub)


##########################################################################################

DevOps: Development  + Operation

MLOps: ML (Development) with CT (continoues training)  + Operation

##########################################################################################

on VS Code:

create a requirements.txt file and put all the package name.

use the below command to download all the packages in one shot.

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>pip install -r requirements.txt
Collecting pandas
  Downloading pandas-1.5.3-cp38-cp38-win_amd64.whl (11.0 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 11.0/11.0 MB 1.1 MB/s eta 0:00:00
Collecting numpy
  Downloading numpy-1.24.2-cp38-cp38-win_amd64.whl (14.9 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 14.9/14.9 MB 1.3 MB/s eta 0:00:00
Collecting flask
  Downloading Flask-2.2.3-py3-none-any.whl (101 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 101.8/101.8 kB 2.9 MB/s eta 0:00:00
Collecting python-dateutil>=2.8.1
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting pytz>=2020.1
  Downloading pytz-2023.2-py2.py3-none-any.whl (502 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 502.1/502.1 kB 3.1 MB/s eta 0:00:00
Collecting importlib-metadata>=3.6.0
  Downloading importlib_metadata-6.1.0-py3-none-any.whl (21 kB)
Collecting Jinja2>=3.0
  Using cached Jinja2-3.1.2-py3-none-any.whl (133 kB)
Collecting click>=8.0
  Using cached click-8.1.3-py3-none-any.whl (96 kB)
Collecting Werkzeug>=2.2.2
  Downloading Werkzeug-2.2.3-py3-none-any.whl (233 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 233.6/233.6 kB 2.8 MB/s eta 0:00:00
Collecting itsdangerous>=2.0
  Using cached itsdangerous-2.1.2-py3-none-any.whl (15 kB)
Collecting colorama
  Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)
Collecting zipp>=0.5
  Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)
Collecting MarkupSafe>=2.0
  Downloading MarkupSafe-2.1.2-cp38-cp38-win_amd64.whl (16 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Installing collected packages: pytz, zipp, six, numpy, MarkupSafe, itsdangerous, colorama, Werkzeug, python-dateutil, Jinja2, importlib-metadata, click, pandas, flask
Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.2 Werkzeug-2.2.3 click-8.1.3 colorama-0.4.6 flask-2.2.3 importlib-metadata-6.1.0 itsdangerous-2.1.2 numpy-1.24.2 pandas-1.5.3 python-dateutil-2.8.2 pytz-2023.2 six-1.16.0 zipp-3.15.0

[notice] A new release of pip available: 22.2.2 -> 23.0.1
[notice] To update, run: python.exe -m pip install --upgrade pip

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>


############################################

Now create the folder notebook in Demo-Pipeline

and then create Jupyter notebok ex. test.ipynb

and follow the creating files.


Whereever we have __init__.py file, condiser it in package.

##########################################################################################

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>python setup.py install 
running install
C:\Users\pvppa\Documents\demo-pipeline\venv\lib\site-packages\setuptools\command\install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.
  warnings.warn(
C:\Users\pvppa\Documents\demo-pipeline\venv\lib\site-packages\setuptools\command\easy_install.py:144: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.
  warnings.warn(
running bdist_egg
running egg_info
creating cencus_income.egg-info
writing cencus_income.egg-info\PKG-INFO
writing dependency_links to cencus_income.egg-info\dependency_links.txt
writing requirements to cencus_income.egg-info\requires.txt    
writing top-level names to cencus_income.egg-info\top_level.txt
writing manifest file 'cencus_income.egg-info\SOURCES.txt'     
reading manifest file 'cencus_income.egg-info\SOURCES.txt'
writing manifest file 'cencus_income.egg-info\SOURCES.txt'
installing library code to build\bdist.win-amd64\egg
running install_lib
warning: install_lib: 'build\lib' does not exist -- no Python modules to install

creating build
creating build\bdist.win-amd64
creating build\bdist.win-amd64\egg
creating build\bdist.win-amd64\egg\EGG-INFO
copying cencus_income.egg-info\PKG-INFO -> build\bdist.win-amd64\egg\EGG-INFO   
copying cencus_income.egg-info\SOURCES.txt -> build\bdist.win-amd64\egg\EGG-INFO
copying cencus_income.egg-info\dependency_links.txt -> build\bdist.win-amd64\egg\EGG-INFO
copying cencus_income.egg-info\requires.txt -> build\bdist.win-amd64\egg\EGG-INFO
copying cencus_income.egg-info\top_level.txt -> build\bdist.win-amd64\egg\EGG-INFO
zip_safe flag not set; analyzing archive contents...
creating dist
creating 'dist\cencus_income-0.0.1-py3.8.egg' and adding 'build\bdist.win-amd64\egg' to it
removing 'build\bdist.win-amd64\egg' (and everything under it)
Processing cencus_income-0.0.1-py3.8.egg
Copying cencus_income-0.0.1-py3.8.egg to c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Adding cencus-income 0.0.1 to easy-install.pth file

Installed c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages\cencus_income-0.0.1-py3.8.egg
Processing dependencies for cencus-income==0.0.1
Searching for Flask==2.2.3
Best match: Flask 2.2.3
Adding Flask 2.2.3 to easy-install.pth file
Installing flask-script.py script to C:\Users\pvppa\Documents\demo-pipeline\venv\Scripts
Installing flask.exe script to C:\Users\pvppa\Documents\demo-pipeline\venv\Scripts

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for numpy==1.24.2
Best match: numpy 1.24.2
Adding numpy 1.24.2 to easy-install.pth file
Installing f2py-script.py script to C:\Users\pvppa\Documents\demo-pipeline\venv\Scripts
Installing f2py.exe script to C:\Users\pvppa\Documents\demo-pipeline\venv\Scripts

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for pandas==1.5.3
Best match: pandas 1.5.3
Adding pandas 1.5.3 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for importlib-metadata==6.1.0
Best match: importlib-metadata 6.1.0
Adding importlib-metadata 6.1.0 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for click==8.1.3
Best match: click 8.1.3
Adding click 8.1.3 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for itsdangerous==2.1.2
Best match: itsdangerous 2.1.2
Adding itsdangerous 2.1.2 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for Jinja2==3.1.2
Best match: Jinja2 3.1.2
Adding Jinja2 3.1.2 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for Werkzeug==2.2.3
Best match: Werkzeug 2.2.3
Adding Werkzeug 2.2.3 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for pytz==2023.2
Best match: pytz 2023.2
Adding pytz 2023.2 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for python-dateutil==2.8.2
Best match: python-dateutil 2.8.2
Adding python-dateutil 2.8.2 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for zipp==3.15.0
Best match: zipp 3.15.0
Adding zipp 3.15.0 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for colorama==0.4.6
Best match: colorama 0.4.6
Adding colorama 0.4.6 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for MarkupSafe==2.1.2
Best match: MarkupSafe 2.1.2
Adding MarkupSafe 2.1.2 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Searching for six==1.16.0
Best match: six 1.16.0
Adding six 1.16.0 to easy-install.pth file

Using c:\users\pvppa\documents\demo-pipeline\venv\lib\site-packages
Finished processing dependencies for cencus-income==0.0.1

(C:\Users\pvppa\Documents\demo-pipeline\venv) C:\Users\pvppa\Documents\demo-pipeline>